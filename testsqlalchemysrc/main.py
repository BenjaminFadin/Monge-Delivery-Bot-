import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
    KeyboardButton
)
from aiogram.types.web_app_info import WebAppInfo # type: ignore
from config import bot, dp, WEB_APP_URL
from models import Message, SessionLocal, init_db

db_session = SessionLocal()

# logging.basicConfig(level=logging.INFO)

init_db()


ibtn_markup = InlineKeyboardMarkup(row_width=1)
ibtn = InlineKeyboardButton("–ñ–º–∞–∫–Ω—É—Ç—å", web_app=WebAppInfo(url=WEB_APP_URL))
ibtn_markup.add(ibtn)

# –û–±—ã—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
btn_markup = ReplyKeyboardMarkup(resize_keyboard=True)
# –ö–Ω–æ–ø–∫–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
btn = KeyboardButton("–ù—É –∏–ª–∏ —Ç—É—Ç –∂–º–∞–∫–Ω–∏ ü§∑‚Äç", web_app=WebAppInfo(url=WEB_APP_URL))
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
btn_markup.add(btn)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/start"
@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "/start"
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É", reply_markup=btn_markup)
    await bot.send_photo(
        chat_id=message.chat.id,
        photo="https://sun9-48.userapi.com/impg/99sr3duW9QmScm2E92YO62IX-lk0SCFXS7iWlg/ZzMx4vOkI88.jpg?size=666x500"
              "&quality=95&sign=ae40df49bdf9464980d98e00f9f1fc9a&type=album",
        caption="‚Üì –ü–æ—Å–º–æ—Ç—Ä–∏ —á—Ç–æ —Ç—É—Ç –µ—Å—Ç—å ‚Üì",
        reply_markup=ibtn_markup
    )
    await message.delete()


# # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# @dp.message_handler()
# async def any_messages(message: types.Message):
#     # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
#     await bot.send_photo(
#         chat_id=message.chat.id,
#         photo="https://sun9-58.userapi.com/impg/51JITtE7C7jPF-1augXmXk06SLpieJB2aZ-KUA/cRBYFZT16U4.jpg?size=666x500&quality=95&sign=f8810eddcf08ece777202b9abab24100&type=album",
#         caption="‚Üì –ñ–ú–ê–ö–ê–ô!!!! ‚Üì",
#         reply_markup=ibtn_markup
#     )

@dp.message_handler()
async def echo_message(message: types.Message):
    try:
        # Save message to database
        db_message = Message(user_id=message.from_user.id, text=message.text)
        db_session.add(db_message)
        db_session.commit()
        
        # Echo the message back to the user
        await message.answer(message.text)
    except Exception as e:
        logging.error(f"Database error: {e}")


db_session.close()



if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
